{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NV9P Amateur Radio","text":"<p>Welcome to the website of the radio station NV9P. On these pages I try and share some of my amateur radio experiences and related projects. I should probably mention up front that I am a self taught electronics enthusiast and that's probably being too generous. Amateur radio caught my eye in 2013 and I had no idea how unforgivingly difficult it would be for me muddling through every step of the way. There is an intense learning curve and oftentimes it takes me dozens of attempts before I get something even close to success. However it is really satisfying when you finally do make a breakthrough but be warned those are few and far between.</p>"},{"location":"#here-are-some-projects-i-have-been-tinkering-with-lately","title":"Here are some projects I have been tinkering with lately","text":""},{"location":"#using-d-star-with-an-icom-id-52a-handheld-radio","title":"Using D-Star with an Icom ID-52a handheld radio","text":"<p>This has been my journey using D-Star so far:</p> <ul> <li>Registering your callsign for a D-Star</li> <li>Downloading the D-STAR repeater list into your HT</li> <li>D-STAR Basics: Linking, Unlinking, Echotest</li> </ul>"},{"location":"#packet-radio-over-2-meter","title":"Packet Radio over 2 meter","text":"<p>For this project I had to overcome several hurdles:</p> <ul> <li>Build a USB programming cable for the Motorola CDM1250 VHF radio</li> <li>Build a interface cable from the radio to the Byonics TinyTrack4 TNC</li> <li>Modify a Astron SS-25 power supply to use Anderson Powerpole connectors</li> <li>Learn about specific details relating to APRS and how to configure a TNC</li> </ul>"},{"location":"about/","title":"About","text":"<p>My interest in amateur radio began in 2013 when I was living in Colorado Springs. I had no idea this whole other world of amateur radio existed and when I started to learn about it I knew I had to get involved. I studied for the Technician exam and found the exam was being offered at a local church. I went in one Saturday and passed both the Technician and General exam sessions and was given the callsign KE0BUI.</p> <p>After a year of contacts and listening and a lot of studying I upgraded my license to Amateur Extra in Fort Collins and given the callsign AD0OW. I used mainly 2m and 70cm bands during this time with a Yaesu FT60R handi-talkie. I got to know the guys at the CSU Amateur Radio Club and learned a lot about repeaters. We overhauled the W0QEY repeater on the CSU campus for the first time in 30 years!</p> <p>I requested a vanity callsign from the FCC and received the callsign NV9P on the 29th of May, 2015. I work the 40m and 20m bands on phone and PSK31. Lately I have been researching antenna options to expand my band capabilities and distance.</p> <p>73, Casey NV9P</p> <p></p>"},{"location":"logbook/","title":"My digital logbook","text":""},{"location":"qsl-cards/","title":"QSL Cards","text":"<p>Here are some QSL Cards I have received by making and confirming contacts with other ham radio operators around the world.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"tags/","title":"Tag index","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/tags/","title":"Tag index  for the blog","text":"<p>contest</p>"},{"location":"blog/2015/10/05/california-qso-party-2015/","title":"California QSO Party 2015","text":"<p>Being my first radio contest I think it went quite well. I ended up only making 34 contacts over a 24 hour period but it was still fun. Mind you this was between doing other things, not just me glued to the chair all day and night. I'd wander in and out and depending on the band conditions I'd sit down for 15 minutes and log a few contacts.</p> <p>The real interesting part about the contest was the logging software that I used. It's a program called N1MM+ logger but it made the scoring, exchanges and tracking everything so easy and streamlined. For all these contests they release a contest specific file you upload into N1MM+ that guides you through the contest. For example I had to contact a California station, get their serial number and four digit municipality like SDIE for San Diego and give them an incremented serial number from my station to complete the contact. The radio has a USB to the computer so it has the frequency, mode and time already filled in. I typed their call into the software, it auto-incremented the serial, discovered the municipality and hit enter. Done.</p> <p>To add a little more incentive to the contest they had 36 special stations scattered throughout the state that had the letters in their callsign to spell GOLDRUSH. If you spelled it out in your logged contacts they would send you a QSO party commemorative coin. N1MM+ would flag those callsigns as I contacted them (based on that contest file upload) and I could track my progress. I think I ended up with GOLDR__H ha.</p> <p>The tricky part of the contest was scanning the bands to try and find these people to contact. Plus the fact that I have a wire antenna strung up in the yard didn't help much. But when I found the contesters they usually came in loud and clear. I stumbled upon this neat tool called a spotting network that helps find contacts. Usually they use it for DX spotting but they had a contest spotting one too. Another tool built into that N1MM+ software, it actually uses telnet and you connect to a chat room of sorts and as other people log contacts in N1MM+ it automatically sends the calls, frequency, time, distance and more to this spotting network and N1MM+ puts a \"spot\" in your own program. When you see the spots you click them, the radio tunes to the right mode and frequency and you hope your antenna can hear them!</p> <p>About the time I got tired of repeating the same stuff in the radio \"CQ California, CQ California, this is NV9P calling all California stations for the QSO Party\" I discovered they have macro functions built into the software with one button recording! I pimped out all my macros and made it a lot smoother. At this point between the logging, spotting network and macros it was mostly automated. There was a guy online that recorded all the numbers and letters individually and he could fully automate the whole exchange which I thought was funny.</p> <p>The final piece was after the contest ended Sunday afternoon, you close out your log in N1MM+ and export a Cabrillo format log of all your contacts. This is the standardized format so I exported that real quick and they have a webpage on the California QSO Party website where you upload your file. Took 5 seconds and my scores were in the books. They have a 7 day grace period to give everyone a chance to upload. It figured out the multipliers, the point value per contact and calculated it all correctly. in a nice neat text file.</p> <p>I submitted as a solo operator but they have mobile, low power, multi-op, rookie and other categories to give everyone a chance to win something.</p> <p></p>"},{"location":"blog/2016/06/25/field-day-2016/","title":"Field Day 2016","text":"<p>I operated at the Cabin in Pecos, New Mexico for Field Day 2016.</p> <p>This was my first field day and I lumped it together with a family trip to the cabin so I didn't get much operating time. Between radio difficulties and band conditions I only managed 2 measely contacts all weekend. I used a Buddipole setup with my Icom 7200 HF radio with a tuner.</p>"},{"location":"blog/2015/05/31/first-hf-station/","title":"First HF Station","text":"<p>My first HF station, a used Icom-746 bought off Craigslist that came with an Astron SS-30M power supply. Word of advice, don't buy radios off Craigslist..</p> <p>I messed with this radio for weeks not having good luck with contacting stations only to find out the transmitter was fried. It was only putting out about 3 watts of power. After having it repaired I sold it to buy a new Icom 7200 and had much better luck. Still it left a lasting mark because I spent so much time getting absolutely nowhere with making contacts.</p>"},{"location":"blog/2018/04/16/high-altitude-balloon-part-1-cameras/","title":"High Altitude Balloon Part 1: Cameras","text":"<p>For my high altitude balloon launch, I wanted to send up something a little cheaper than a $400 GoPro camera in the event that I can't locate the balloon when it comes back to earth!</p> <p>So I found a much cheaper alternative that gave me the same level of customization but at a fraction of the price... old Canon cameras running the Canon Hack Development Kit CHDK</p> <p>For $50 I was able to score two Canon AS1000 point and shoot cameras off eBay and loaded two 64GB flash cards with the latest stable CHDK package (1.41 as of the time of this post)</p> <p></p> <p>One camera will be my \"still photos\" camera and the other will be the \"video camera\". One of the excellent features of CHDK is the scripting feature. You can copy LUA scripts to the memory card and have them execute a series of functions on the camera. In this case I want the cameras to immediately start recording video once powered on or shooting photos every 5 seconds once powered on.</p> <p>I found it tricky to install CHDK on the 64GB SD Card I had purchased and found out my cameras were manufactuered in 2008. Everytime I inserted the card to try and format it on the camera it just complained with \"Memory Card Error\". So after a little digging I found that I could partition the cards in linux, copy the CHDK files on to them and then the cameras would be happy.</p> <p>First I used GParted in Ubuntu to create the first partition at 16MB as a FAT16 boot partition. After I confirmed the changes I right clicked the partition, went to \"Manage Flags\" and set this partition as a boo partition. This allows the camera to load up CHDK everytime on power and I don't have to manually activate it each time. Then I created a second partition as FAT32 that took up the rest of the space on the memory card. Here's what my GParted screen looked like after everything was finalized:</p> <p></p> <p>Then I had to copy the CHDK files to the camera. I downloaded the latest stable version of CHDK, 1.41 and extracted it on my laptop. Then I copied the DISKBOOT.BIN and PS.F12 files to the first boot patition. Then I copied the CHDK folder to the second partiton. Here are screenshots of each folder and what they should look like:</p> <p> </p> <p>Finally I ejected the Memory card and write protected the card with the little plastic tab on the side. This step is important! It's what tells the camera to load from the boot partition. Now when you power on the camera the CHDK splashscreen will show after about 3 seconds.</p> <p>Here's the lua script for continuous still shots of the camera for as long as the battery lasts or until the memory card fills up</p> <pre><code>--[[ High Altitude Balloon Camera script for Canon AS1100, still photos\n@title Balloon Camera\n@param    i Shot Interval\n @default i 5\n @range   i 1 60\n@param    d Display\n @default d 0\n @values  d 0 1\n--]]\n\nprops = require(\"propcase\")\nset_console_layout(1 ,1, 60, 15 )\nprint_screen(-1)\nprint(\"HAB Camera\")\nprint(os.date())\nsleep(1000)\n\nlocal is_record, is_video, mode_number\nis_record, is_video, mode_number = get_mode()\nmode_number = bitand(mode_number, 0xFF)\nif (mode_number ~= 2) then\n    print(\"!!! WRONG MODE \"..mode_number..\" !!!\")\n    print(\"!!! WRONG MODE \"..mode_number..\" !!!\")\n    print(\"!!! WRONG MODE \"..mode_number..\" !!!\")\n    print(\"Set P mode and restart camera\")\n    sleep(10000)\n    post_levent_to_ui('PressPowerButton')\nend\n\n-- conf.subj_dist_override_koef = SD_OVERRIDE_INFINITY\nif (get_config_value(108) ~= 2) then\n    print(\"Enabling distance override\")\n    set_config_value(108, 2)\n    sleep(500)\nend\n\nif (is_record == false) then\n    print(\"Switching to photo capture\")\n    set_record(1)\n    while (get_mode() == false) do sleep(100) end\n    sleep(1000)\nend\n\nprint(\"Setting AF-Lock\")\nset_aflock(1)\nset_prop(props.AF_LOCK, 1)\nsleep(1000)\n\nprint(\"Setting focus to infinity\")\nset_focus(60000)\nsleep(3000)\n\nlocal image_count = 0\nprint(\"---\")\n\nwhile(true)\ndo\n    if ((image_count == 3) and (d == 0)) then\n        print(\"Turning off display...\")\n        sleep(3000)\n        set_lcd_display(0)\n        sleep(1000)\n    end\n\n    image_count = image_count + 1\n    local battery_voltage = get_vbatt()\n    local temperature = get_temperature(0)\n    local disk_kb = get_free_disk_space()\n    local disk_mb = disk_kb / 1024\n\n    print(\"Time: \"..os.date())\n    print(\"Battery: \"..battery_voltage..\" mV\")\n    print(\"Temp: \"..temperature..\" C\")\n    print(\"Space: \"..disk_mb..\" MB\")\n\n    if (disk_mb &lt; 10) then\n        print(\"Out of disk space!\")\n        break\n    end\n\n    print(\"Image: \"..image_count)\n    press(\"shoot_half\")\n    repeat sleep(50) until get_shooting() == true\n\n    local av = get_av96()\n    local sv = get_sv96()\n    local tv = get_tv96()\n    local bv = get_bv96()\n    local fc = get_focus()\n    print(\"Exposure: AV=\"..av..\" SV=\"..sv..\" TV=\"..tv..\" BV=\"..bv)\n    print(\"Focus: \"..fc)\n\n    press(\"shoot_full\")\n    sleep(500)\n    release(\"shoot_full\")\n\n    repeat sleep(50) until get_shooting() == false\n    release(\"shoot_half\")\n\n    print(\"File: \"..get_exp_count());\n    print(\"---\")\n\n    sleep(i * 1000)\nend\n\nprint(\"Power down\")\npost_levent_to_ui('PressPowerButton')\n</code></pre> <p>This is the video recording script and it allows you to:</p> <ul> <li>turn the display on &amp; off by pressing the DISP button or down button,</li> <li>halt the script by pressing the MENU button</li> <li>restart recording by pressing the SET button.</li> <li>zoom in &amp; out by moving the cameras zoom lever</li> <li>refocus by \"half pressing\" the shutter button</li> <li>It works on cameras with and without a dedicated video button.</li> </ul> <p>Save it to your SD card with a .lua extension (e.g. vid_ext.lua).</p> <pre><code>--[[\n********************************\nLicence: GPL\n(c) msl 2012 - 2014\n********************************\n@title Extended Video r2\n@param a Auto (re)start\n@default a 1\n@range a 0 1\n@param b Time in s 0=max\n@default b 0\n@range b 0 1800\n]]\n\nfunction StartStopVideo()\n    local rec, vid = get_mode()\n    local vid_button = get_video_button()\n    if rec and vid and vid_button == 0 then\n        press(\"shoot_full\")\n        sleep(300)\n        release(\"shoot_full\")\n    elseif rec and vid_button == 1 then\n        click(\"video\")\n    end\nend\n\nfunction restore()\n    if get_movie_status() == 4 then StartStopVideo() end\n    cls()\n    set_console_layout(0,0,25,5)\n    set_console_autoredraw(1)\nend\n\nrestart = a\nrecord_time = b\nBL=0\nTC=false\ntime_start = 0\ntime_now = 0\n\nset_console_layout(9,1,39,6)\nif restart==1 then\n    cls()\n    print(\"Automatic Video (Re)Start\")\n    if record_time &gt; 0 then print(\"record time:\", record_time, \"s\") end\n    sleep(2000)\nend\nset_console_autoredraw(0)\n\nrepeat\n    if TC == false and record_time &gt; 0 then\n        time_start = get_tick_count()\n        TC = true\n    end\n    cls()\n    if restart ~= 1 then print(\"[SET] Start/Stop Video\") end\n    print(\"[DISP]  On/Off Backlight\")\n    print(\"[ZOOM]  Zooming\")\n    print(\"[MENU]  End\")\n    console_redraw()\n    wait_click(900)\n    if is_key(\"display\") or is_key(\"down\") then\n        set_backlight(BL)\n        if BL == 1 then BL=0 else BL=1 end\n    elseif is_key(\"set\") and restart ~= 1 then StartStopVideo()\n    elseif is_key(\"shoot_half\") then set_aflock(1)\n    elseif is_key(\"zoom_in\")  then press(\"zoom_in\")  while is_pressed(\"zoom_in\")  do sleep(20) end release(\"zoom_in\")\n    elseif is_key(\"zoom_out\") then press(\"zoom_out\") while is_pressed(\"zoom_out\") do sleep(20) end release(\"zoom_out\")\n    end\n    if TC and record_time &gt; 0 then\n        if get_tick_count() - time_start &gt;= record_time * 1000 + 2000 then\n            StartStopVideo() -- stop video\n            TC = false\n        end\n    end\n    status = get_movie_status()\n    if (status &lt; 4 or status &gt; 4) and restart == 1 then\n        StartStopVideo()\n        cls()\n        print(\"Start recording\")\n        console_redraw()\n        sleep(5000)\n        if BL == 1 then set_backlight(0) end\n    end\nuntil is_key(\"menu\")\n\nrestore()\n</code></pre>"},{"location":"blog/2018/04/26/high-altitude-balloon-part-2-trackuino/","title":"High Altitude Balloon Part 2: Trackuino","text":"<p>The most important piece of equipment for the high altitude balloon launch is the Trackuino. This is a quick walkthrough on building the Trackuino and a test drive on APRS.</p> <p>Here's the introduction to what the Trackuino does from its website:  This is the firmware for Trackuino, an open-source APRS tracker based on the Arduino platform. It was designed primarily to track high altitude balloons, so it has other handy features like reading temperature sensors and a buzzer for acoustic location. Trackuino is intended for use by licensed radio amateurs. </p> <p>It's a tiny arduino capable of transmitting data over the 2 meter amateur radio band on 144.390Mhz. That is the general frequency used for APRS, which stands for Automatic Packet Reporting System. It's a way we can use amateur radio frequencies coupled with GPS coordinates to track our balloon in near real time via an chase car radio setup. It can give us telemetry on the balloon like its altitude, speed, temperature and other factors.</p> <p>Here's the build of materials for the Trackuino</p> Part Source Arduino Uno https://www.sparkfun.com/products/11224 Venus GPS https://www.sparkfun.com/products/11058 Trackuino Shield Bill of materials  https://github.com/trackuino/shield GPS Antenna V6 Dipole Antenna https://www.byonics.com/antennas <p>Here is my finished Trackuino with the Trackuino Shield, Venus GPS, Dipole Antenna and GPS Antenna:</p> <p></p> <p>I was able to test the Trackuino by powering it up and waiting for a GPS fix, then it started beaconing out on 144.390Mhz every 60 seconds and showing up on APRS.fi</p> <p></p>"},{"location":"blog/2016/04/16/horsetooth-mountain/","title":"Horsetooth Mountain","text":""},{"location":"blog/2015/04/11/the-ipod-of-prison/","title":"The iPod of Prison","text":"<p>The pocket analog radio, known by the bland model number SRF-39FP, is a Sony \u201cultralight\u201d model manufactured for prisons. Its clear housing is meant to prevent inmates from using it to smuggle contraband, and, at under thirty dollars, it is the most affordable Sony radio on the prison market.</p> <p>Read more about it here: http://www.newyorker.com/tech/elements/the-ipod-of-prison</p>"},{"location":"blog/2016/05/08/jeeping-moab/","title":"Jeeping Moab","text":""},{"location":"blog/2016/06/05/mobile-ops-jacks-gulch/","title":"Mobile Ops Jacks Gulch","text":"<p>I went camping with my buddy in Rustic, Colorado and strung up a dipole antenna to operate HF while we were out of the weekend. Made a few contacts and had a lot of fun!</p> <p> </p>"},{"location":"blog/2015/06/24/sgt-pepper-qso/","title":"Sgt. Pepper QSO","text":"<p>RIP Pepper, you were the best pound puppy ever. \u2764\ufe0f</p>"},{"location":"blog/2017/04/01/program-maxtrac-with-dosbox/","title":"Program Maxtrac with DosBox","text":"<p>I found a used Maxtrac 300 radio on eBay that I wanted to repurpose into an APRS tracker and realized I needed to program the APRS frequency. Here is how you use DoxBox to program your radio.</p>"},{"location":"blog/2017/04/01/program-maxtrac-with-dosbox/#things-you-need","title":"Things you need:","text":"<ul> <li>Maxtrac Radio</li> <li>Windows computer (I'm using Windows 10 x64)</li> <li>Motorola FTDI programming cable from Valley Enterprises</li> <li>FTDI Driver (http://www.ftdichip.com/Drivers/VCP.htm)</li> <li>DosBox Software (https://www.dosbox.com/)</li> <li>GM300 Software (gm300v.5.zip)</li> </ul> <p>Install the FTDI Driver for Windows Install the DosBox software Download the GM300 software and extract it to C:\\GM300 Plug in your FTDI USB cable and check Device Manager to see what COM port it was assigned:</p>"},{"location":"blog/2017/04/01/program-maxtrac-with-dosbox/#locate-your-dosbox-config-file-for-editing","title":"Locate your DosBox config file for editing","text":"<pre><code>{system drive}:\\Users\\{username}\\AppData\\Local\\DOSBox\\dosbox-{version}.conf\n</code></pre>"},{"location":"blog/2017/04/01/program-maxtrac-with-dosbox/#open-your-dosbox-configuration-file-and-set-the-following-variables","title":"Open your DosBox configuration file and set the following variables:","text":"<pre><code>core=auto\ncputype=auto\ncycles=fixed 191\ncycleup=10\ncycledown=20\n\nserial1=directserial realport COM1\nserial2=dummy\nserial3=disabled\nserial4=disabled\n\n[autoexec]\n# Lines in this section will be run at startup.\n# You can put your MOUNT lines here.\n\nMOUNT c C:\\GM300\nc:\n</code></pre> <p>Now when you run DosBox all you need to do is launch the program with</p> <pre><code>GM300.EXE\n</code></pre> <p>Here's what the Main Menu looks like when loaded</p> <p>First you need to pull the current code plug off the radio before you can make changes</p>"},{"location":"blog/2024/08/24/register-for-d-star/","title":"Register for D-STAR","text":"<p>New Callsign Registration is a two-step process.  </p>"},{"location":"blog/2024/08/24/register-for-d-star/#first-step-get-an-account-on-a-d-star-gateway","title":"First Step \u2013 get an account on a D-STAR gateway","text":"<p>Navigate to https://regist.dstargateway.org/Dstar.do and click on the Register button.  Enter your callsign in UPPER CASE along with other requested information and a password of your choice.  This will submit your request for approval. You will receive a confirmation email once your request for an account is approved.</p>"},{"location":"blog/2024/08/24/register-for-d-star/#second-step-create-a-terminal","title":"Second Step \u2013 Create a \u201cterminal\u201d","text":"<p>Once your account is approved, go back to the above Registration page and under \"Already Registered?\", enter your callsign (UPPER CASE) and password and click Login.</p> <p>Then click on the Personal Information tab (upper right of main page).  Each numbered line can be used to set up a terminal.  For your first terminal:</p> <p></p> <ul> <li>Click on the check-box on the left of the first line</li> <li>Enter a blank (press the space bar) in the Initial box.  This is important.  Don't skip over this field.  Just enter an explicit space into this box.</li> <li>Enter a capital \"Z\" in the second box. Check the \"AccessPoint\" box.</li> <li>Click Update</li> </ul> <p>After you\u2019ve entered your terminal, it sometimes takes several hours for the updates to propagate through the D-STAR network. You can check at: https://regist.dstargateway.org/regcheck/index.php.</p>"},{"location":"blog/2024/08/24/register-for-d-star/#final-step","title":"Final Step","text":"<p>Be sure to enter your registered callsign into your radio's MY or MYCALL field.  You must do this before that radio will be able to talk to others on reflectors or connected repeaters.  For nearly everyone, you only need one terminal, even if you have more than one D-STAR radio.  Just use the same registered callsign in MY/MYCALL on all your radios.</p>"},{"location":"blog/2015/08/01/csu-repeater-maintenance/","title":"CSU Repeater Maintenance","text":"<p>The local Colorado State University CSU Amateur Radio club was doing some maintenance on their W0QEY repeater and I volunteered to help.</p> <p></p> <p>Mainly we were just cleaning out old equipment and cleaning the existing equipment. It was fun seeing the guts of a repeater and seeing how the cavities are tuned for clean transmit.</p> <pre><code>Frequency: 446.8125- minus\nLocation: Fort Collins, CSU Durward Hall\nCounty: Larimer\n</code></pre> <p> </p>"},{"location":"blog/2015/04/08/contest/","title":"ARRL Rookie Roundup 2015","text":"<p>This was my very first attempt at contesting. I participated in the annual ARRL Rookie Roundup this year with the help of John Wells, KB0NE.</p> <p>John was kind enough to share his shack with me and show me the basics of operating in a contest. I didn't score too many points but it was a great afternoon and got me thinking about how to contest more efficiently in the future.</p> <p></p> <p></p>"},{"location":"blog/2015/06/29/visiting-arrl-headquarters/","title":"Visiting ARRL Headquarters","text":"<p>My family was in New York for a wedding and we had a chance to visit the ARRL Headquarters in Newington, CT to see W1AW! We had a tour of the building and got to see the testing lab and all the departments at ARRL.</p> <p>Joe Garcia, the station manager at W1AW set me up to operate on one of their stations available. It was so overwhelming having all that power and antenna at my fingertips. I was able to squeak out a contact or two and then we hit the road for lunch.</p> <p> </p>"},{"location":"blog/archive/2024/","title":"August 2024","text":""},{"location":"blog/archive/2018/","title":"April 2018","text":""},{"location":"blog/archive/2017/","title":"April 2017","text":""},{"location":"blog/archive/2016/","title":"June 2016","text":""},{"location":"blog/archive/2015/","title":"October 2015","text":""},{"location":"blog/page/2/","title":"Blog","text":""}]}